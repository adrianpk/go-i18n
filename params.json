{"name":"go-i18n","tagline":"Translate your Go program into multiple languages with templates and CLDR plural support.","body":"go-i18n [![Build Status](https://secure.travis-ci.org/nicksnyder/go-i18n.png?branch=master)](http://travis-ci.org/nicksnyder/go-i18n)\r\n=======\r\n\r\ngo-i18n is a Go [package](#i18n-package) and a [command](#goi18n-command) that can be used to translate Go programs into multiple languages.\r\n* Supports pluralized strings using [CLDR plural rules](http://cldr.unicode.org/index/cldr-spec/plural-rules).\r\n* Supports strings with named variables using [text/template](http://golang.org/pkg/text/template/) syntax.\r\n* Translation files are simple JSON.\r\n* [Documented](http://godoc.org/github.com/nicksnyder/go-i18n) and [tested](https://travis-ci.org/nicksnyder/go-i18n)!\r\n\r\nPackage i18n [![GoDoc](http://godoc.org/github.com/nicksnyder/go-i18n?status.png)](http://godoc.org/github.com/nicksnyder/go-i18n/i18n)\r\n------------\r\n\r\nThe i18n package provides runtime APIs for fetching translated strings.\r\n\r\nCommand goi18n [![GoDoc](http://godoc.org/github.com/nicksnyder/go-i18n?status.png)](http://godoc.org/github.com/nicksnyder/go-i18n/goi18n)\r\n--------------\r\n\r\nThe goi18n command provides functionality for managing the translation process.\r\n\r\n### Installation\r\n\r\nMake sure you have [setup GOPATH](http://golang.org/doc/code.html#GOPATH).\r\n\r\n    go get -u github.com/nicksnyder/go-i18n/goi18n\r\n    goi18n -help\r\n\r\n### Workflow\r\n\r\nA typical workflow looks like this:\r\n\r\n1. Add a new string to your source code.\r\n\r\n    ```go\r\n    T(\"settings_title\")\r\n    ```\r\n\r\n2. Add the string to en-US.all.json\r\n\r\n    ```json\r\n    [\r\n      {\r\n        \"id\": \"settings_title\",\r\n        \"translation\": \"Settings\"\r\n      }\r\n    ]\r\n    ```\r\n\r\n3. Run goi18n\r\n\r\n    ```\r\n    goi18n path/to/*.all.json\r\n    ```\r\n\r\n4. Send `path/to/*.untranslated.json` to get translated.\r\n5. Run goi18n again to merge the translations\r\n\r\n    ```sh\r\n    goi18n path/to/*.all.json path/to/*.untranslated.json\r\n    ```\r\n\r\nTranslation files\r\n-----------------\r\n\r\nA translation file stores translated and untranslated strings.\r\n\r\nExample:\r\n\r\n```json\r\n[\r\n  {\r\n    \"id\": \"d_days\",\r\n    \"translation\": {\r\n      \"one\": \"{{.Count}} day\",\r\n      \"other\": \"{{.Count}} days\"\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"my_height_in_meters\",\r\n    \"translation\": {\r\n      \"one\": \"I am {{.Count}} meter tall.\",\r\n      \"other\": \"I am {{.Count}} meters tall.\"\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"person_greeting\",\r\n    \"translation\": \"Hello {{.Person}}\"\r\n  },\r\n  {\r\n    \"id\": \"person_unread_email_count\",\r\n    \"translation\": {\r\n      \"one\": \"{{.Person}} has {{.Count}} unread email.\",\r\n      \"other\": \"{{.Person}} has {{.Count}} unread emails.\"\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"person_unread_email_count_timeframe\",\r\n    \"translation\": {\r\n      \"one\": \"{{.Person}} has {{.Count}} unread email in the past {{.Timeframe}}.\",\r\n      \"other\": \"{{.Person}} has {{.Count}} unread emails in the past {{.Timeframe}}.\"\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"program_greeting\",\r\n    \"translation\": \"Hello world\"\r\n  },\r\n  {\r\n    \"id\": \"your_unread_email_count\",\r\n    \"translation\": {\r\n      \"one\": \"You have {{.Count}} unread email.\",\r\n      \"other\": \"You have {{.Count}} unread emails.\"\r\n    }\r\n  }\r\n]\r\n```\r\n\r\nSupported languages\r\n-------------------\r\n\r\n* Arabic (`ar`)\r\n* Bulgarian (`bg`)\r\n* Catalan (`ca`)\r\n* Chinese (simplified and traditional) (`zh`)\r\n* Czech (`cs`)\r\n* Danish (`da`)\r\n* Dutch (`nl`)\r\n* English (`en`)\r\n* French (`fr`)\r\n* German (`de`)\r\n* Icelandic (`is`)\r\n* Italian (`it`)\r\n* Japanese (`ja`)\r\n* Lithuanian (`lt`)\r\n* Portuguese (`pt`)\r\n* Portuguese (Brazilian) (`pt-BR`)\r\n* Spanish (`es`)\r\n* Swedish (`sv`)\r\n\r\nAdding new languages\r\n--------------------\r\n\r\nIt is easy to add support for additional languages:\r\n\r\n1. Lookup the language's [CLDR plural rules](http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html).\r\n2. Add the language to [pluralspec.go](https://github.com/nicksnyder/go-i18n/blob/master/i18n/language/pluralspec.go):\r\n\r\n    ```go\r\n    var pluralSpecs = map[string]*PluralSpec{\r\n        // ...\r\n\t\t\t\t// English\r\n\t\t\t\t\"en\": &PluralSpec{\r\n\t\t\t\t\tPlurals: newPluralSet(One, Other),\r\n\t\t\t\t\tPluralFunc: func(ops *operands) Plural {\r\n\t\t\t\t\t\tif ops.I == 1 && ops.V == 0 {\r\n\t\t\t\t\t\t\treturn One\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn Other\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n        // ...\r\n    }\r\n    ```\r\n\r\n3. Add a test to [pluralspec_test.go](https://github.com/nicksnyder/go-i18n/blob/master/i18n/language/pluralspec_test.go)\r\n4. Update this README with the new language.\r\n5. Submit a pull request!\r\n\r\nLicense\r\n-------\r\ngo-i18n is available under the MIT license. See the [LICENSE](https://github.com/nicksnyder/go-i18n/blob/master/LICENSE) file for more info.\r\n","google":"UA-47572933-1","note":"Don't delete this file! It's used internally to help with page regeneration."}